[{"title":"Git学习","date":"2017-01-02T04:42:19.000Z","path":"2017/01/02/Git学习/","text":"参考链接：廖雪峰的官方网站","tags":[{"name":"Git","slug":"Git","permalink":"lindyer.github.io/source/tags/Git/"},{"name":"入门","slug":"入门","permalink":"lindyer.github.io/source/tags/入门/"}]},{"title":"Hexo  学习","date":"2016-12-31T04:07:39.000Z","path":"2016/12/31/Hexo-学习/","text":"[简介] ​ Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 Hexo官网 、Hexo文档 以下为windows的安装步骤 [安装前提] Node.js + Git [开始安装] 以下命令在git bash下执行 $ npm install -g hexo-cli npm（全称Node Package Manager，即node包管理器）是Node.js预设的、以JavaScript编写的软件管理系统。 hexo-cli 是hexo的客户端 [验证] PS： md图片插入 ![图片名称，可省略](图片URL) [主题下载] — 命令：git clone &lt;仓库&gt; &lt;存放路径&gt;；以后的操作以此路径为根目录 [初始化博客目录] — 命令：hexo init &lt;路径&gt; hexo init F:\\Blogcd F:\\Blognpm install [写博客] — 命令： hexo new &lt;文章名称&gt; hexo new \"Hexo学习\" 生成的MarkDown文件在：根目录下source/_posts/ 编写Hexo学习.md ，我这里采用的 Typora，具体的语法操作详见：http://wowubuntu.com/markdown/ md文件有个Front Matter，文件开头处可以增添一些解析参数。 title: Hexo 学习date: 2016-12-31 12:07:39tags: [Hexo,入门] 其中，tags则是文章的标签，可用于快速检索。 [本地预览] hexo clean &amp;&amp; hexo s [发布] hexo clean;hexo generate;hexo deploy; [用别名简化命令] windows下，默认是没有.bashrc，利用Git Bash在系统的管理员目录C:\\Users\\Administrator新建.bashrc touch .bashrc 在里面添加别名，如下 alias hd=\"hexo clean;hexo generate;hexo deploy;\" #发布alias hs=\"hexo clean &amp;&amp; hexo s\" #本地预览 [结尾]为文章加点音乐，下面标签直接插入MD文件(Markdown兼容HTML) &lt;center&gt;&lt;iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=100% height=86 src=\"//music.163.com/outchain/player?type=2&amp;id=694286&amp;auto=1&amp;height=66\"&gt;&lt;/iframe&gt; &lt;/center&gt;","tags":[{"name":"入门","slug":"入门","permalink":"lindyer.github.io/source/tags/入门/"},{"name":"Hexo","slug":"Hexo","permalink":"lindyer.github.io/source/tags/Hexo/"}]},{"title":"MarkDown学习","date":"2016-12-29T13:59:43.000Z","path":"2016/12/29/MarkDown学习/","text":"【概述】：Markdown是一种适用于网络的书写语言，易读易写；Markdown中文文档 【兼容HTML】：其兼容HTML，但与HTML不同是的，HTML是一种发布的格式，MarkDown是一种书写的格式，Markdown的格式语法只涵盖存文本可以涵盖的范围。不在Markdown涵盖范围的标签，可以直接在文档里面用HTML撰写，不需要额外标注这是HTML或者Markdown；只要直接加标签就可以了。要制约的只有一些HTML区块标签，比如&lt;div&gt; 、&lt;table&gt;、&lt;pre&gt;、 &lt;p&gt;等标签，必须在前后加上空行与其他内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格缩进。Markdown的生成器有足够智能，不会再HTML区块标签外加上不必要的&lt;p&gt; 标签。 【特殊字符自动转换】 ：在 HTML 文件中，有两个字符需要特殊处理： &lt; 和 &amp; 。 &lt; 符号用于起始标签，&amp; 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 &lt; 和 &amp;。 区块元素【段落和换行】 一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。 「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 标签。 如果你确实想要依赖 Markdown 来插入 标签的话，在插入处先按入两个以上的空格然后回车。 的确，需要多费点事（多加空格）来产生 ，但是简单地「每个换行都转换为 」的方法在 Markdown 中并不适合， Markdown 中 email 式的 区块引用 和多段落的 列表 在使用换行来排版的时候，不但更好用，还更方便阅读。 【标题】(类 Atx 形式)在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如： # 这是 H1## 这是 H2###### 这是 H6 【区块引用Blockquotes】 Markdown 标记区块引用是使用类似 email 中用&gt; 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上&gt;： &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&gt; id sem consectetuer libero luctus adipiscing. Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ： wiki&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. 区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ： &gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level. 引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等： &gt; ## 这是一个标题。&gt; &gt; 1. 这是第一行列表项。&gt; 2. 这是第二行列表项。&gt; &gt; 给出一些例子代码：&gt; &gt; return shell_exec(\"echo $input | $markdown_script\"); 上面 这是一个标题。 这是第一行列表项。 这是第二行列表项。 给出一些例子代码： return shell_exec(&quot;echo $input | $markdown_script&quot;); 【列表】Markdown 支持有序列表和无序列表。 无序列表使用星号*、加号+或是减号-作为列表标记（中间用空格分隔）： * Red* Green* Blue 有序列表则使用数字接着一个英文句点： 1. Bird2. McHale3. Parish 很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果;如果内容存在类似写法(数字-句点-空白)，则需要对.转义\\. 如果要在列表项目内放进引用，那 &gt; 就需要缩进： * A list item with a blockquote: &gt; This is a blockquote &gt; inside a list item. 如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符： * 一列表项包含一个列表区块： &lt;代码写在这&gt; 【代码区块】 和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 &lt;prev&gt; 和 &lt;code&gt; 标签来把代码区块包起来。 【分隔线】 你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线 ***--- 区段元素【链接】Markdown支持两种形式的链接语法：行内式和参考式两种形式。 不管是哪一种，链接文字都是用 [方括号] 来标记。 要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如： This is [an example](http://example.com/ \"Title\") inline link.[This link](http://example.net/) has no title attribute. This is an example inline link This link has no title attribute. 如果你是要链接到同样主机的资源，你可以使用相对路径： See my [About](/about/) page for details. 参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记： This is [an example][id] reference-style link. This is [an example][id] reference-style link. 接着，在文件的任意处，你可以把这个标记的链接内容定义出来： [id]: http://example.com/ \"Optional Title Here\" 链接内容定义的形式为： 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字 接着一个冒号 接着一个以上的空格或制表符 接着链接的网址 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着 链接网址也可以用尖括号包起来 [id]: &lt;http://example.com/&gt; \"Optional Title Here\" 你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看： [id]: http://example.com/longish/path/to/resource/here \"Optional Title Here\" 【强调】 Markdown 使用星号（*）和底线（_）作为标记强调字词的符号，被 * 或 _ 包围的字词会被转成用 &lt;em&gt; 标签包围，用两个 * 或 _ 包起来的话，则会被转成 &lt;strong&gt;，例如： *single asterisks*_single underscores_**double asterisks**__double underscores__ 【代码】 如果要标记一小段行内代码，你可以用反引号把它包起来（`` ），例如： Use the `printf()` function. 【图片】 很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。 Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。 行内式的图片语法看起来像是： ![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg \"Optional title\") 详细叙述如下： 一个惊叹号 ! 接着一个方括号，里面放上图片的替代文字 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。 参考式的图片语法则长得像这样： ![Alt text][id] 「id」是图片参考的名称，图片参考的定义方式则和连结参考一样： [id]: url/to/image \"Optional title attribute\" 到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 &lt;img&gt; 标签。 其他【自动链接】 Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如： 【反斜杠】 Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 &lt;em&gt; 标签），你可以在星号的前面加上反斜杠： Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号： \\ 反斜线` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号 参考链接：Markdown语法说明（简体中文）","tags":[{"name":"入门","slug":"入门","permalink":"lindyer.github.io/source/tags/入门/"},{"name":"MarkDown","slug":"MarkDown","permalink":"lindyer.github.io/source/tags/MarkDown/"}]}]